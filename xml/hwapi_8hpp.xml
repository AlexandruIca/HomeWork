<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="hwapi_8hpp" kind="file" language="C++">
    <compoundname>hwapi.hpp</compoundname>
    <includes local="no">functional</includes>
    <includes local="no">memory</includes>
    <includes local="no">vector</includes>
    <includes refid="color_8hpp" local="yes">color.hpp</includes>
    <includes refid="vec2_8hpp" local="yes">vec2.hpp</includes>
    <includes refid="window_8hpp" local="yes">window.hpp</includes>
    <includedby refid="graphics_8hpp" local="yes">graphics.hpp</includedby>
    <includedby refid="hwapi_8cpp" local="yes">hwapi.cpp</includedby>
    <incdepgraph>
      <node id="41">
        <label>functional</label>
      </node>
      <node id="45">
        <label>cstdint</label>
      </node>
      <node id="48">
        <label>SDL2/SDL.h</label>
      </node>
      <node id="43">
        <label>vector</label>
      </node>
      <node id="47">
        <label>window.hpp</label>
        <link refid="window_8hpp"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>color.hpp</label>
        <link refid="color_8hpp"/>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>hwapi.hpp</label>
        <link refid="hwapi_8hpp"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>vec2.hpp</label>
        <link refid="vec2_8hpp"/>
      </node>
      <node id="42">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="50">
        <label>graphics.hpp</label>
        <link refid="graphics_8hpp"/>
      </node>
      <node id="49">
        <label>hwapi.hpp</label>
        <link refid="hwapi_8hpp"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>hwapi.cpp</label>
        <link refid="hwapi_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classdummy__api_1_1Shape" prot="public">dummy_api::Shape</innerclass>
    <innerclass refid="classdummy__api_1_1Point" prot="public">dummy_api::Point</innerclass>
    <innerclass refid="classdummy__api_1_1Line" prot="public">dummy_api::Line</innerclass>
    <innerclass refid="classdummy__api_1_1Triangle" prot="public">dummy_api::Triangle</innerclass>
    <innerclass refid="classdummy__api_1_1OutlineTriangle" prot="public">dummy_api::OutlineTriangle</innerclass>
    <innerclass refid="classdummy__api_1_1Rectangle" prot="public">dummy_api::Rectangle</innerclass>
    <innerclass refid="classdummy__api_1_1OutlineRectangle" prot="public">dummy_api::OutlineRectangle</innerclass>
    <innerclass refid="classdummy__api_1_1Circle" prot="public">dummy_api::Circle</innerclass>
    <innerclass refid="classdummy__api_1_1OutlineCircle" prot="public">dummy_api::OutlineCircle</innerclass>
    <innernamespace refid="namespacedummy__api">dummy_api</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="hwapi_8hpp_1a18cfaf7b034d0d8cbd9a8823c87fa34e" prot="public" static="no">
        <name>HWAPI_HPP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="23" column="9" bodyfile="include/hwapi.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This file contains the api for drawing primitives. To draw a primitive you have to call &lt;primitive&gt;(positions...) where &apos;&lt;primitive&gt;&apos; can be point, line, rectangle, triangle, circle. To draw only the outline of a primitive just call outline_&lt;primitive&gt;(positions...). To draw primitives but also be able to modify them in some way (eg: change their color) you should create objects of type &lt;primitive&gt;. Only the naming convention is different. To create an object of type triangle: <programlisting><codeline><highlight class="normal">Triangle<sp/>shape{<sp/>x1,<sp/>y1,<sp/>x2,<sp/>y2,<sp/>x3,<sp/>y3<sp/>};</highlight></codeline>
</programlisting> And to draw only the outline: <programlisting><codeline><highlight class="normal">OutlineTriangle<sp/>shape{<sp/>x1,<sp/>y1,<sp/>x2,<sp/>y2,<sp/>x3,<sp/>y3<sp/>};</highlight></codeline>
</programlisting> This file also provides functions to modify the size of the window that will be created to draw stuff. </para>    </detaileddescription>
    <location file="include/hwapi.hpp"/>
  </compounddef>
</doxygen>
