<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classdummy__api_1_1Circle" kind="class" language="C++" prot="public" final="yes">
    <compoundname>dummy_api::Circle</compoundname>
    <basecompoundref refid="classdummy__api_1_1Shape" prot="public" virt="non-virtual">dummy_api::Shape</basecompoundref>
    <includes refid="hwapi_8hpp" local="no">hwapi.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdummy__api_1_1Circle_1ace60616d1f72137c6e099a16cb5a79d3" prot="private" static="no" mutable="no">
        <type><ref refid="structhw_1_1vec2" kindref="compound">hw::vec2</ref></type>
        <definition>hw::vec2 dummy_api::Circle::m_pos</definition>
        <argsstring></argsstring>
        <name>m_pos</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="710" column="1" bodyfile="include/hwapi.hpp" bodystart="710" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdummy__api_1_1Circle_1a302e0b4da3b2838079dbe58dc2139d37" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int dummy_api::Circle::m_radius</definition>
        <argsstring></argsstring>
        <name>m_radius</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="711" column="1" bodyfile="include/hwapi.hpp" bodystart="711" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdummy__api_1_1Circle_1a801c0e2bc102dc56c48ecbc6ce64f7f7" prot="private" static="no" mutable="no">
        <type><ref refid="structhw_1_1color" kindref="compound">hw::color</ref></type>
        <definition>hw::color dummy_api::Circle::m_color</definition>
        <argsstring></argsstring>
        <name>m_color</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="712" column="1" bodyfile="include/hwapi.hpp" bodystart="712" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdummy__api_1_1Circle_1afe8121939030144ed099bf6e52c25d7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dummy_api::Circle::Circle</definition>
        <argsstring>()=default</argsstring>
        <name>Circle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="715" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1Circle_1a30f357e3eeff959a4d3634b8065844d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dummy_api::Circle::Circle</definition>
        <argsstring>(const int t_x, const int t_y, const int t_radius, const hw::color &amp;t_color=hw::color{})</argsstring>
        <name>Circle</name>
        <param>
          <type>const int</type>
          <declname>t_x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>t_y</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>t_radius</declname>
        </param>
        <param>
          <type>const <ref refid="structhw_1_1color" kindref="compound">hw::color</ref> &amp;</type>
          <declname>t_color</declname>
          <defval><ref refid="structhw_1_1color" kindref="compound">hw::color</ref>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="716" column="1" bodyfile="src/hwapi.cpp" bodystart="649" bodyend="655"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1Circle_1a126bb794a26aa8d1e1913f0e5cb95a8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dummy_api::Circle::Circle</definition>
        <argsstring>(const hw::vec2 &amp;t_pos, const int t_radius, const hw::color &amp;t_color=hw::color{})</argsstring>
        <name>Circle</name>
        <param>
          <type>const <ref refid="structhw_1_1vec2" kindref="compound">hw::vec2</ref> &amp;</type>
          <declname>t_pos</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>t_radius</declname>
        </param>
        <param>
          <type>const <ref refid="structhw_1_1color" kindref="compound">hw::color</ref> &amp;</type>
          <declname>t_color</declname>
          <defval><ref refid="structhw_1_1color" kindref="compound">hw::color</ref>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="718" column="1" bodyfile="src/hwapi.cpp" bodystart="657" bodyend="663"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1Circle_1ae9867e6638a89fc0fb7dcaad3b9a611d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dummy_api::Circle::Circle</definition>
        <argsstring>(hw::vec2 &amp;&amp;t_pos, const int t_radius, hw::color &amp;&amp;t_color=hw::color{})</argsstring>
        <name>Circle</name>
        <param>
          <type><ref refid="structhw_1_1vec2" kindref="compound">hw::vec2</ref> &amp;&amp;</type>
          <declname>t_pos</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>t_radius</declname>
        </param>
        <param>
          <type><ref refid="structhw_1_1color" kindref="compound">hw::color</ref> &amp;&amp;</type>
          <declname>t_color</declname>
          <defval><ref refid="structhw_1_1color" kindref="compound">hw::color</ref>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="720" column="1" bodyfile="src/hwapi.cpp" bodystart="665" bodyend="670"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1Circle_1aa4a057af0bdc3085831400007e5cd280" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dummy_api::Circle::~Circle</definition>
        <argsstring>() noexcept override=default</argsstring>
        <name>~Circle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="722" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1Circle_1a1af189074586f476647ee754056e5abd" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void dummy_api::Circle::draw</definition>
        <argsstring>() final</argsstring>
        <name>draw</name>
        <reimplements refid="classdummy__api_1_1Shape_1a9f357f722f9df3199026cd95b2ef74b8">draw</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="724" column="1" bodyfile="src/hwapi.cpp" bodystart="673" bodyend="703"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1Circle_1abeb7bea611614c56b69ae2afc48e9806" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhw_1_1vec2" kindref="compound">hw::vec2</ref> &amp;</type>
        <definition>hw::vec2&amp; dummy_api::Circle::pos</definition>
        <argsstring>()</argsstring>
        <name>pos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="726" column="1" bodyfile="include/hwapi.hpp" bodystart="726" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1Circle_1a54ffe8b738150e9a0d3ca4fa57051631" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structhw_1_1vec2" kindref="compound">hw::vec2</ref> &amp;</type>
        <definition>const hw::vec2&amp; dummy_api::Circle::pos</definition>
        <argsstring>() const</argsstring>
        <name>pos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="730" column="1" bodyfile="include/hwapi.hpp" bodystart="730" bodyend="733"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1Circle_1a9af19fd3b8662e2aaa0b481acbc24b2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int &amp;</type>
        <definition>int&amp; dummy_api::Circle::radius</definition>
        <argsstring>()</argsstring>
        <name>radius</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="735" column="1" bodyfile="include/hwapi.hpp" bodystart="735" bodyend="738"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1Circle_1a6457ea736dd30bfc503bc693e3747d1c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const int &amp;</type>
        <definition>const int&amp; dummy_api::Circle::radius</definition>
        <argsstring>() const</argsstring>
        <name>radius</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="739" column="1" bodyfile="include/hwapi.hpp" bodystart="739" bodyend="742"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1Circle_1a800ad92a438310c71e11631c3adce684" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhw_1_1color" kindref="compound">hw::color</ref> &amp;</type>
        <definition>hw::color&amp; dummy_api::Circle::color</definition>
        <argsstring>()</argsstring>
        <name>color</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="744" column="1" bodyfile="include/hwapi.hpp" bodystart="744" bodyend="747"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1Circle_1a1be15dd16d55353e67e3175976c852a1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structhw_1_1color" kindref="compound">hw::color</ref> &amp;</type>
        <definition>const hw::color&amp; dummy_api::Circle::color</definition>
        <argsstring>() const</argsstring>
        <name>color</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="748" column="1" bodyfile="include/hwapi.hpp" bodystart="748" bodyend="751"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1Circle_1aba499d1750ac58b781b2d22524c51095" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classdummy__api_1_1Circle" kindref="compound">Circle</ref> &amp;</type>
        <definition>Circle&amp; dummy_api::Circle::operator=</definition>
        <argsstring>(const Circle &amp;t_other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classdummy__api_1_1Circle" kindref="compound">Circle</ref> &amp;</type>
          <declname>t_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="753" column="1" bodyfile="include/hwapi.hpp" bodystart="753" bodyend="759"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1Circle_1a97753a3826f553fd712e4e532d0e0684" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool dummy_api::Circle::operator==</definition>
        <argsstring>(const Circle &amp;t_other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classdummy__api_1_1Circle" kindref="compound">Circle</ref> &amp;</type>
          <declname>t_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="761" column="1" bodyfile="include/hwapi.hpp" bodystart="761" bodyend="764"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1Circle_1a38586a3a29b65e92e78d078790952bbd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool dummy_api::Circle::operator!=</definition>
        <argsstring>(const Circle &amp;t_other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classdummy__api_1_1Circle" kindref="compound">Circle</ref> &amp;</type>
          <declname>t_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="765" column="1" bodyfile="include/hwapi.hpp" bodystart="765" bodyend="768"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Describes a <ref refid="classdummy__api_1_1Circle" kindref="compound">Circle</ref> object. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>dummy_api::Shape</label>
        <link refid="classdummy__api_1_1Shape"/>
      </node>
      <node id="0">
        <label>dummy_api::Circle</label>
        <link refid="classdummy__api_1_1Circle"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>dummy_api::Shape</label>
        <link refid="classdummy__api_1_1Shape"/>
      </node>
      <node id="2">
        <label>dummy_api::Circle</label>
        <link refid="classdummy__api_1_1Circle"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/hwapi.hpp" line="709" column="1" bodyfile="include/hwapi.hpp" bodystart="708" bodyend="769"/>
    <listofallmembers>
      <member refid="classdummy__api_1_1Circle_1afe8121939030144ed099bf6e52c25d7e" prot="public" virt="non-virtual"><scope>dummy_api::Circle</scope><name>Circle</name></member>
      <member refid="classdummy__api_1_1Circle_1a30f357e3eeff959a4d3634b8065844d3" prot="public" virt="non-virtual"><scope>dummy_api::Circle</scope><name>Circle</name></member>
      <member refid="classdummy__api_1_1Circle_1a126bb794a26aa8d1e1913f0e5cb95a8c" prot="public" virt="non-virtual"><scope>dummy_api::Circle</scope><name>Circle</name></member>
      <member refid="classdummy__api_1_1Circle_1ae9867e6638a89fc0fb7dcaad3b9a611d" prot="public" virt="non-virtual"><scope>dummy_api::Circle</scope><name>Circle</name></member>
      <member refid="classdummy__api_1_1Circle_1a800ad92a438310c71e11631c3adce684" prot="public" virt="non-virtual"><scope>dummy_api::Circle</scope><name>color</name></member>
      <member refid="classdummy__api_1_1Circle_1a1be15dd16d55353e67e3175976c852a1" prot="public" virt="non-virtual"><scope>dummy_api::Circle</scope><name>color</name></member>
      <member refid="classdummy__api_1_1Circle_1a1af189074586f476647ee754056e5abd" prot="public" virt="virtual"><scope>dummy_api::Circle</scope><name>draw</name></member>
      <member refid="classdummy__api_1_1Circle_1a801c0e2bc102dc56c48ecbc6ce64f7f7" prot="private" virt="non-virtual"><scope>dummy_api::Circle</scope><name>m_color</name></member>
      <member refid="classdummy__api_1_1Circle_1ace60616d1f72137c6e099a16cb5a79d3" prot="private" virt="non-virtual"><scope>dummy_api::Circle</scope><name>m_pos</name></member>
      <member refid="classdummy__api_1_1Circle_1a302e0b4da3b2838079dbe58dc2139d37" prot="private" virt="non-virtual"><scope>dummy_api::Circle</scope><name>m_radius</name></member>
      <member refid="classdummy__api_1_1Circle_1a38586a3a29b65e92e78d078790952bbd" prot="public" virt="non-virtual"><scope>dummy_api::Circle</scope><name>operator!=</name></member>
      <member refid="classdummy__api_1_1Circle_1aba499d1750ac58b781b2d22524c51095" prot="public" virt="non-virtual"><scope>dummy_api::Circle</scope><name>operator=</name></member>
      <member refid="classdummy__api_1_1Circle_1a97753a3826f553fd712e4e532d0e0684" prot="public" virt="non-virtual"><scope>dummy_api::Circle</scope><name>operator==</name></member>
      <member refid="classdummy__api_1_1Circle_1abeb7bea611614c56b69ae2afc48e9806" prot="public" virt="non-virtual"><scope>dummy_api::Circle</scope><name>pos</name></member>
      <member refid="classdummy__api_1_1Circle_1a54ffe8b738150e9a0d3ca4fa57051631" prot="public" virt="non-virtual"><scope>dummy_api::Circle</scope><name>pos</name></member>
      <member refid="classdummy__api_1_1Circle_1a9af19fd3b8662e2aaa0b481acbc24b2e" prot="public" virt="non-virtual"><scope>dummy_api::Circle</scope><name>radius</name></member>
      <member refid="classdummy__api_1_1Circle_1a6457ea736dd30bfc503bc693e3747d1c" prot="public" virt="non-virtual"><scope>dummy_api::Circle</scope><name>radius</name></member>
      <member refid="classdummy__api_1_1Shape_1afa927ea1d5ef0635f209a117d7617067" prot="protected" virt="non-virtual"><scope>dummy_api::Circle</scope><name>Shape</name></member>
      <member refid="classdummy__api_1_1Circle_1aa4a057af0bdc3085831400007e5cd280" prot="public" virt="non-virtual"><scope>dummy_api::Circle</scope><name>~Circle</name></member>
      <member refid="classdummy__api_1_1Shape_1afaa225741e5e3aaf6631a65e812766b6" prot="public" virt="virtual"><scope>dummy_api::Circle</scope><name>~Shape</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
