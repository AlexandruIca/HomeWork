<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classdummy__api_1_1OutlineCircle" kind="class" language="C++" prot="public" final="yes">
    <compoundname>dummy_api::OutlineCircle</compoundname>
    <basecompoundref refid="classdummy__api_1_1Shape" prot="public" virt="non-virtual">dummy_api::Shape</basecompoundref>
    <includes refid="hwapi_8hpp" local="no">hwapi.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdummy__api_1_1OutlineCircle_1a456f8b25ff6509078467e60c7f4c3ac0" prot="private" static="no" mutable="no">
        <type><ref refid="structhw_1_1vec2" kindref="compound">hw::vec2</ref></type>
        <definition>hw::vec2 dummy_api::OutlineCircle::m_pos</definition>
        <argsstring></argsstring>
        <name>m_pos</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="776" column="1" bodyfile="include/hwapi.hpp" bodystart="776" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdummy__api_1_1OutlineCircle_1ae3ae5807a32ff4e094746d75c8395654" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int dummy_api::OutlineCircle::m_radius</definition>
        <argsstring></argsstring>
        <name>m_radius</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="777" column="1" bodyfile="include/hwapi.hpp" bodystart="777" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdummy__api_1_1OutlineCircle_1a59e3793dc29415dcb94131b8656e8de9" prot="private" static="no" mutable="no">
        <type><ref refid="structhw_1_1color" kindref="compound">hw::color</ref></type>
        <definition>hw::color dummy_api::OutlineCircle::m_color</definition>
        <argsstring></argsstring>
        <name>m_color</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="778" column="1" bodyfile="include/hwapi.hpp" bodystart="778" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdummy__api_1_1OutlineCircle_1a2263eff530fcc738b034bec561a4e34f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dummy_api::OutlineCircle::OutlineCircle</definition>
        <argsstring>()=default</argsstring>
        <name>OutlineCircle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="781" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1OutlineCircle_1a6abfc512e0ba179e2e5d7640edbd5c61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dummy_api::OutlineCircle::OutlineCircle</definition>
        <argsstring>(const int t_x, const int t_y, const int t_radius, const hw::color &amp;t_color=hw::color{})</argsstring>
        <name>OutlineCircle</name>
        <param>
          <type>const int</type>
          <declname>t_x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>t_y</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>t_radius</declname>
        </param>
        <param>
          <type>const <ref refid="structhw_1_1color" kindref="compound">hw::color</ref> &amp;</type>
          <declname>t_color</declname>
          <defval><ref refid="structhw_1_1color" kindref="compound">hw::color</ref>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="782" column="1" bodyfile="src/hwapi.cpp" bodystart="718" bodyend="724"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1OutlineCircle_1a11df38a8c43c42b58cacb3de0e37ff84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dummy_api::OutlineCircle::OutlineCircle</definition>
        <argsstring>(const hw::vec2 &amp;t_pos, const int t_radius, const hw::color &amp;t_color=hw::color{})</argsstring>
        <name>OutlineCircle</name>
        <param>
          <type>const <ref refid="structhw_1_1vec2" kindref="compound">hw::vec2</ref> &amp;</type>
          <declname>t_pos</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>t_radius</declname>
        </param>
        <param>
          <type>const <ref refid="structhw_1_1color" kindref="compound">hw::color</ref> &amp;</type>
          <declname>t_color</declname>
          <defval><ref refid="structhw_1_1color" kindref="compound">hw::color</ref>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="784" column="1" bodyfile="src/hwapi.cpp" bodystart="726" bodyend="732"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1OutlineCircle_1a613a7f4b53ff2a122e9b0f6344cdff75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dummy_api::OutlineCircle::OutlineCircle</definition>
        <argsstring>(hw::vec2 &amp;&amp;t_pos, const int t_radius, hw::color &amp;&amp;t_color=hw::color{})</argsstring>
        <name>OutlineCircle</name>
        <param>
          <type><ref refid="structhw_1_1vec2" kindref="compound">hw::vec2</ref> &amp;&amp;</type>
          <declname>t_pos</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>t_radius</declname>
        </param>
        <param>
          <type><ref refid="structhw_1_1color" kindref="compound">hw::color</ref> &amp;&amp;</type>
          <declname>t_color</declname>
          <defval><ref refid="structhw_1_1color" kindref="compound">hw::color</ref>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="786" column="1" bodyfile="src/hwapi.cpp" bodystart="734" bodyend="740"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1OutlineCircle_1a85ff1fef2448016173cea4e600d24d28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dummy_api::OutlineCircle::~OutlineCircle</definition>
        <argsstring>() noexcept override=default</argsstring>
        <name>~OutlineCircle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="788" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1OutlineCircle_1aa422deec6a5b1070091a07642584f67a" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void dummy_api::OutlineCircle::draw</definition>
        <argsstring>() final</argsstring>
        <name>draw</name>
        <reimplements refid="classdummy__api_1_1Shape_1a9f357f722f9df3199026cd95b2ef74b8">draw</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="790" column="1" bodyfile="src/hwapi.cpp" bodystart="743" bodyend="777"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1OutlineCircle_1aa24e7368991757fb28eda016b650111e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhw_1_1vec2" kindref="compound">hw::vec2</ref> &amp;</type>
        <definition>hw::vec2&amp; dummy_api::OutlineCircle::pos</definition>
        <argsstring>()</argsstring>
        <name>pos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="792" column="1" bodyfile="include/hwapi.hpp" bodystart="792" bodyend="795"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1OutlineCircle_1aa66bd50839710367f8e6a1eb6c68a650" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structhw_1_1vec2" kindref="compound">hw::vec2</ref> &amp;</type>
        <definition>const hw::vec2&amp; dummy_api::OutlineCircle::pos</definition>
        <argsstring>() const</argsstring>
        <name>pos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="796" column="1" bodyfile="include/hwapi.hpp" bodystart="796" bodyend="799"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1OutlineCircle_1aca8b58f073be8e22c0cb119ac65a92e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int &amp;</type>
        <definition>int&amp; dummy_api::OutlineCircle::radius</definition>
        <argsstring>()</argsstring>
        <name>radius</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="801" column="1" bodyfile="include/hwapi.hpp" bodystart="801" bodyend="804"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1OutlineCircle_1a0c565c8163a48ad85508c359502d1d37" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const int &amp;</type>
        <definition>const int&amp; dummy_api::OutlineCircle::radius</definition>
        <argsstring>() const</argsstring>
        <name>radius</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="805" column="1" bodyfile="include/hwapi.hpp" bodystart="805" bodyend="808"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1OutlineCircle_1a3b26df528f7aa33939ed8864b15cba46" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhw_1_1color" kindref="compound">hw::color</ref> &amp;</type>
        <definition>hw::color&amp; dummy_api::OutlineCircle::color</definition>
        <argsstring>()</argsstring>
        <name>color</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="810" column="1" bodyfile="include/hwapi.hpp" bodystart="810" bodyend="813"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1OutlineCircle_1af5490b84dfb63facfce2ef8187410446" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structhw_1_1color" kindref="compound">hw::color</ref> &amp;</type>
        <definition>const hw::color&amp; dummy_api::OutlineCircle::color</definition>
        <argsstring>() const</argsstring>
        <name>color</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="814" column="1" bodyfile="include/hwapi.hpp" bodystart="814" bodyend="817"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1OutlineCircle_1ad742f4c3b261c0f2344b62d68cf654ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classdummy__api_1_1OutlineCircle" kindref="compound">OutlineCircle</ref> &amp;</type>
        <definition>OutlineCircle&amp; dummy_api::OutlineCircle::operator=</definition>
        <argsstring>(const OutlineCircle &amp;t_other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classdummy__api_1_1OutlineCircle" kindref="compound">OutlineCircle</ref> &amp;</type>
          <declname>t_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="819" column="1" bodyfile="include/hwapi.hpp" bodystart="819" bodyend="825"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1OutlineCircle_1a4349b28312a92884a6e4a843d451ad3b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool dummy_api::OutlineCircle::operator==</definition>
        <argsstring>(const OutlineCircle &amp;t_other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classdummy__api_1_1OutlineCircle" kindref="compound">OutlineCircle</ref> &amp;</type>
          <declname>t_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="827" column="1" bodyfile="include/hwapi.hpp" bodystart="827" bodyend="830"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1OutlineCircle_1a29f8928c35a9d1fa6bb4b632e0fd0817" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool dummy_api::OutlineCircle::operator!=</definition>
        <argsstring>(const OutlineCircle &amp;t_other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classdummy__api_1_1OutlineCircle" kindref="compound">OutlineCircle</ref> &amp;</type>
          <declname>t_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="831" column="1" bodyfile="include/hwapi.hpp" bodystart="831" bodyend="834"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Describes an <ref refid="classdummy__api_1_1OutlineCircle" kindref="compound">OutlineCircle</ref> object. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="11">
        <label>dummy_api::Shape</label>
        <link refid="classdummy__api_1_1Shape"/>
      </node>
      <node id="10">
        <label>dummy_api::OutlineCircle</label>
        <link refid="classdummy__api_1_1OutlineCircle"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="13">
        <label>dummy_api::Shape</label>
        <link refid="classdummy__api_1_1Shape"/>
      </node>
      <node id="12">
        <label>dummy_api::OutlineCircle</label>
        <link refid="classdummy__api_1_1OutlineCircle"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/hwapi.hpp" line="775" column="1" bodyfile="include/hwapi.hpp" bodystart="774" bodyend="835"/>
    <listofallmembers>
      <member refid="classdummy__api_1_1OutlineCircle_1a3b26df528f7aa33939ed8864b15cba46" prot="public" virt="non-virtual"><scope>dummy_api::OutlineCircle</scope><name>color</name></member>
      <member refid="classdummy__api_1_1OutlineCircle_1af5490b84dfb63facfce2ef8187410446" prot="public" virt="non-virtual"><scope>dummy_api::OutlineCircle</scope><name>color</name></member>
      <member refid="classdummy__api_1_1OutlineCircle_1aa422deec6a5b1070091a07642584f67a" prot="public" virt="virtual"><scope>dummy_api::OutlineCircle</scope><name>draw</name></member>
      <member refid="classdummy__api_1_1OutlineCircle_1a59e3793dc29415dcb94131b8656e8de9" prot="private" virt="non-virtual"><scope>dummy_api::OutlineCircle</scope><name>m_color</name></member>
      <member refid="classdummy__api_1_1OutlineCircle_1a456f8b25ff6509078467e60c7f4c3ac0" prot="private" virt="non-virtual"><scope>dummy_api::OutlineCircle</scope><name>m_pos</name></member>
      <member refid="classdummy__api_1_1OutlineCircle_1ae3ae5807a32ff4e094746d75c8395654" prot="private" virt="non-virtual"><scope>dummy_api::OutlineCircle</scope><name>m_radius</name></member>
      <member refid="classdummy__api_1_1OutlineCircle_1a29f8928c35a9d1fa6bb4b632e0fd0817" prot="public" virt="non-virtual"><scope>dummy_api::OutlineCircle</scope><name>operator!=</name></member>
      <member refid="classdummy__api_1_1OutlineCircle_1ad742f4c3b261c0f2344b62d68cf654ac" prot="public" virt="non-virtual"><scope>dummy_api::OutlineCircle</scope><name>operator=</name></member>
      <member refid="classdummy__api_1_1OutlineCircle_1a4349b28312a92884a6e4a843d451ad3b" prot="public" virt="non-virtual"><scope>dummy_api::OutlineCircle</scope><name>operator==</name></member>
      <member refid="classdummy__api_1_1OutlineCircle_1a2263eff530fcc738b034bec561a4e34f" prot="public" virt="non-virtual"><scope>dummy_api::OutlineCircle</scope><name>OutlineCircle</name></member>
      <member refid="classdummy__api_1_1OutlineCircle_1a6abfc512e0ba179e2e5d7640edbd5c61" prot="public" virt="non-virtual"><scope>dummy_api::OutlineCircle</scope><name>OutlineCircle</name></member>
      <member refid="classdummy__api_1_1OutlineCircle_1a11df38a8c43c42b58cacb3de0e37ff84" prot="public" virt="non-virtual"><scope>dummy_api::OutlineCircle</scope><name>OutlineCircle</name></member>
      <member refid="classdummy__api_1_1OutlineCircle_1a613a7f4b53ff2a122e9b0f6344cdff75" prot="public" virt="non-virtual"><scope>dummy_api::OutlineCircle</scope><name>OutlineCircle</name></member>
      <member refid="classdummy__api_1_1OutlineCircle_1aa24e7368991757fb28eda016b650111e" prot="public" virt="non-virtual"><scope>dummy_api::OutlineCircle</scope><name>pos</name></member>
      <member refid="classdummy__api_1_1OutlineCircle_1aa66bd50839710367f8e6a1eb6c68a650" prot="public" virt="non-virtual"><scope>dummy_api::OutlineCircle</scope><name>pos</name></member>
      <member refid="classdummy__api_1_1OutlineCircle_1aca8b58f073be8e22c0cb119ac65a92e6" prot="public" virt="non-virtual"><scope>dummy_api::OutlineCircle</scope><name>radius</name></member>
      <member refid="classdummy__api_1_1OutlineCircle_1a0c565c8163a48ad85508c359502d1d37" prot="public" virt="non-virtual"><scope>dummy_api::OutlineCircle</scope><name>radius</name></member>
      <member refid="classdummy__api_1_1Shape_1afa927ea1d5ef0635f209a117d7617067" prot="protected" virt="non-virtual"><scope>dummy_api::OutlineCircle</scope><name>Shape</name></member>
      <member refid="classdummy__api_1_1OutlineCircle_1a85ff1fef2448016173cea4e600d24d28" prot="public" virt="non-virtual"><scope>dummy_api::OutlineCircle</scope><name>~OutlineCircle</name></member>
      <member refid="classdummy__api_1_1Shape_1afaa225741e5e3aaf6631a65e812766b6" prot="public" virt="virtual"><scope>dummy_api::OutlineCircle</scope><name>~Shape</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
