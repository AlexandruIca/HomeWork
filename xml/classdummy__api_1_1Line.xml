<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classdummy__api_1_1Line" kind="class" language="C++" prot="public" final="yes">
    <compoundname>dummy_api::Line</compoundname>
    <basecompoundref refid="classdummy__api_1_1Shape" prot="public" virt="non-virtual">dummy_api::Shape</basecompoundref>
    <includes refid="hwapi_8hpp" local="no">hwapi.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdummy__api_1_1Line_1ae3294dada82fbccb428d7c7018984b4a" prot="private" static="no" mutable="no">
        <type><ref refid="structhw_1_1vec2" kindref="compound">hw::vec2</ref></type>
        <definition>hw::vec2 dummy_api::Line::m_start</definition>
        <argsstring></argsstring>
        <name>m_start</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="351" column="1" bodyfile="include/hwapi.hpp" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdummy__api_1_1Line_1a9e4547313f0e4aad93c7736c09a7fe83" prot="private" static="no" mutable="no">
        <type><ref refid="structhw_1_1vec2" kindref="compound">hw::vec2</ref></type>
        <definition>hw::vec2 dummy_api::Line::m_end</definition>
        <argsstring></argsstring>
        <name>m_end</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="352" column="1" bodyfile="include/hwapi.hpp" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdummy__api_1_1Line_1a779dd516198494badf99031f2abe437e" prot="private" static="no" mutable="no">
        <type><ref refid="structhw_1_1color" kindref="compound">hw::color</ref></type>
        <definition>hw::color dummy_api::Line::m_color</definition>
        <argsstring></argsstring>
        <name>m_color</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="353" column="1" bodyfile="include/hwapi.hpp" bodystart="353" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdummy__api_1_1Line_1ab50601d6e2142ab29ed15ad56646e4f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dummy_api::Line::Line</definition>
        <argsstring>()=default</argsstring>
        <name>Line</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="356" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1Line_1a1f6a830d396867a38be1d6833ee4666b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dummy_api::Line::Line</definition>
        <argsstring>(const int t_x1, const int t_y1, const int t_x2, const int t_y2, const hw::color &amp;t_color=hw::color{})</argsstring>
        <name>Line</name>
        <param>
          <type>const int</type>
          <declname>t_x1</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>t_y1</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>t_x2</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>t_y2</declname>
        </param>
        <param>
          <type>const <ref refid="structhw_1_1color" kindref="compound">hw::color</ref> &amp;</type>
          <declname>t_color</declname>
          <defval><ref refid="structhw_1_1color" kindref="compound">hw::color</ref>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="357" column="1" bodyfile="src/hwapi.cpp" bodystart="158" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1Line_1a99098816c25c1967145d450e8fa2007d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dummy_api::Line::Line</definition>
        <argsstring>(const hw::vec2 &amp;t_a, const hw::vec2 &amp;t_b, const hw::color &amp;t_color=hw::color{})</argsstring>
        <name>Line</name>
        <param>
          <type>const <ref refid="structhw_1_1vec2" kindref="compound">hw::vec2</ref> &amp;</type>
          <declname>t_a</declname>
        </param>
        <param>
          <type>const <ref refid="structhw_1_1vec2" kindref="compound">hw::vec2</ref> &amp;</type>
          <declname>t_b</declname>
        </param>
        <param>
          <type>const <ref refid="structhw_1_1color" kindref="compound">hw::color</ref> &amp;</type>
          <declname>t_color</declname>
          <defval><ref refid="structhw_1_1color" kindref="compound">hw::color</ref>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="359" column="1" bodyfile="src/hwapi.cpp" bodystart="166" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1Line_1a46c913c108ad934cc2a462b067fdc408" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dummy_api::Line::Line</definition>
        <argsstring>(hw::vec2 &amp;&amp;t_a, hw::vec2 &amp;&amp;t_b, hw::color &amp;&amp;t_color=hw::color{})</argsstring>
        <name>Line</name>
        <param>
          <type><ref refid="structhw_1_1vec2" kindref="compound">hw::vec2</ref> &amp;&amp;</type>
          <declname>t_a</declname>
        </param>
        <param>
          <type><ref refid="structhw_1_1vec2" kindref="compound">hw::vec2</ref> &amp;&amp;</type>
          <declname>t_b</declname>
        </param>
        <param>
          <type><ref refid="structhw_1_1color" kindref="compound">hw::color</ref> &amp;&amp;</type>
          <declname>t_color</declname>
          <defval><ref refid="structhw_1_1color" kindref="compound">hw::color</ref>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="361" column="1" bodyfile="src/hwapi.cpp" bodystart="174" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1Line_1a9318bc7992e8e58ffd205a4ee213e84b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dummy_api::Line::~Line</definition>
        <argsstring>() noexcept override=default</argsstring>
        <name>~Line</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="362" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1Line_1abd7c3cb1fa4fdef98c0a7a13559c4ee9" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void dummy_api::Line::draw</definition>
        <argsstring>() final</argsstring>
        <name>draw</name>
        <reimplements refid="classdummy__api_1_1Shape_1a9f357f722f9df3199026cd95b2ef74b8">draw</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="364" column="1" bodyfile="src/hwapi.cpp" bodystart="181" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1Line_1a7490e7861a658e1a4dcae8549016cbe5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhw_1_1vec2" kindref="compound">hw::vec2</ref> &amp;</type>
        <definition>hw::vec2&amp; dummy_api::Line::first</definition>
        <argsstring>()</argsstring>
        <name>first</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="366" column="1" bodyfile="include/hwapi.hpp" bodystart="366" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1Line_1a073d0eaa2030b57357ca7104cb8f1673" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structhw_1_1vec2" kindref="compound">hw::vec2</ref> &amp;</type>
        <definition>const hw::vec2&amp; dummy_api::Line::first</definition>
        <argsstring>() const</argsstring>
        <name>first</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="370" column="1" bodyfile="include/hwapi.hpp" bodystart="370" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1Line_1abda4b1a3e0302622728aafd5dca8d6a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhw_1_1vec2" kindref="compound">hw::vec2</ref> &amp;</type>
        <definition>hw::vec2&amp; dummy_api::Line::second</definition>
        <argsstring>()</argsstring>
        <name>second</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="375" column="1" bodyfile="include/hwapi.hpp" bodystart="375" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1Line_1a5ef35b0438af5d8f0288f79be06f2990" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structhw_1_1vec2" kindref="compound">hw::vec2</ref> &amp;</type>
        <definition>const hw::vec2&amp; dummy_api::Line::second</definition>
        <argsstring>() const</argsstring>
        <name>second</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="379" column="1" bodyfile="include/hwapi.hpp" bodystart="379" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1Line_1ac5b4cc17587cb5d7e04c6e04571a3e62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhw_1_1color" kindref="compound">hw::color</ref> &amp;</type>
        <definition>hw::color&amp; dummy_api::Line::color</definition>
        <argsstring>()</argsstring>
        <name>color</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="384" column="1" bodyfile="include/hwapi.hpp" bodystart="384" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1Line_1aea744d25b44940d3ff157b909db6f3e9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structhw_1_1color" kindref="compound">hw::color</ref> &amp;</type>
        <definition>const hw::color&amp; dummy_api::Line::color</definition>
        <argsstring>() const</argsstring>
        <name>color</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="388" column="1" bodyfile="include/hwapi.hpp" bodystart="388" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1Line_1a58d38792967543384187a0fc9d3b8e7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classdummy__api_1_1Line" kindref="compound">Line</ref> &amp;</type>
        <definition>Line&amp; dummy_api::Line::operator=</definition>
        <argsstring>(const Line &amp;t_other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classdummy__api_1_1Line" kindref="compound">Line</ref> &amp;</type>
          <declname>t_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="393" column="1" bodyfile="include/hwapi.hpp" bodystart="393" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1Line_1a173e59d1f9b51297de56ce9fab8f6e4e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool dummy_api::Line::operator==</definition>
        <argsstring>(const Line &amp;t_other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classdummy__api_1_1Line" kindref="compound">Line</ref> &amp;</type>
          <declname>t_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="401" column="1" bodyfile="include/hwapi.hpp" bodystart="401" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="classdummy__api_1_1Line_1af5396168bfe49ec0451670c739480dcf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool dummy_api::Line::operator!=</definition>
        <argsstring>(const Line &amp;t_other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classdummy__api_1_1Line" kindref="compound">Line</ref> &amp;</type>
          <declname>t_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hwapi.hpp" line="405" column="1" bodyfile="include/hwapi.hpp" bodystart="405" bodyend="408"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Describes a <ref refid="classdummy__api_1_1Line" kindref="compound">Line</ref> object. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6">
        <label>dummy_api::Line</label>
        <link refid="classdummy__api_1_1Line"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>dummy_api::Shape</label>
        <link refid="classdummy__api_1_1Shape"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8">
        <label>dummy_api::Line</label>
        <link refid="classdummy__api_1_1Line"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>dummy_api::Shape</label>
        <link refid="classdummy__api_1_1Shape"/>
      </node>
    </collaborationgraph>
    <location file="include/hwapi.hpp" line="350" column="1" bodyfile="include/hwapi.hpp" bodystart="349" bodyend="409"/>
    <listofallmembers>
      <member refid="classdummy__api_1_1Line_1ac5b4cc17587cb5d7e04c6e04571a3e62" prot="public" virt="non-virtual"><scope>dummy_api::Line</scope><name>color</name></member>
      <member refid="classdummy__api_1_1Line_1aea744d25b44940d3ff157b909db6f3e9" prot="public" virt="non-virtual"><scope>dummy_api::Line</scope><name>color</name></member>
      <member refid="classdummy__api_1_1Line_1abd7c3cb1fa4fdef98c0a7a13559c4ee9" prot="public" virt="virtual"><scope>dummy_api::Line</scope><name>draw</name></member>
      <member refid="classdummy__api_1_1Line_1a7490e7861a658e1a4dcae8549016cbe5" prot="public" virt="non-virtual"><scope>dummy_api::Line</scope><name>first</name></member>
      <member refid="classdummy__api_1_1Line_1a073d0eaa2030b57357ca7104cb8f1673" prot="public" virt="non-virtual"><scope>dummy_api::Line</scope><name>first</name></member>
      <member refid="classdummy__api_1_1Line_1ab50601d6e2142ab29ed15ad56646e4f6" prot="public" virt="non-virtual"><scope>dummy_api::Line</scope><name>Line</name></member>
      <member refid="classdummy__api_1_1Line_1a1f6a830d396867a38be1d6833ee4666b" prot="public" virt="non-virtual"><scope>dummy_api::Line</scope><name>Line</name></member>
      <member refid="classdummy__api_1_1Line_1a99098816c25c1967145d450e8fa2007d" prot="public" virt="non-virtual"><scope>dummy_api::Line</scope><name>Line</name></member>
      <member refid="classdummy__api_1_1Line_1a46c913c108ad934cc2a462b067fdc408" prot="public" virt="non-virtual"><scope>dummy_api::Line</scope><name>Line</name></member>
      <member refid="classdummy__api_1_1Line_1a779dd516198494badf99031f2abe437e" prot="private" virt="non-virtual"><scope>dummy_api::Line</scope><name>m_color</name></member>
      <member refid="classdummy__api_1_1Line_1a9e4547313f0e4aad93c7736c09a7fe83" prot="private" virt="non-virtual"><scope>dummy_api::Line</scope><name>m_end</name></member>
      <member refid="classdummy__api_1_1Line_1ae3294dada82fbccb428d7c7018984b4a" prot="private" virt="non-virtual"><scope>dummy_api::Line</scope><name>m_start</name></member>
      <member refid="classdummy__api_1_1Line_1af5396168bfe49ec0451670c739480dcf" prot="public" virt="non-virtual"><scope>dummy_api::Line</scope><name>operator!=</name></member>
      <member refid="classdummy__api_1_1Line_1a58d38792967543384187a0fc9d3b8e7e" prot="public" virt="non-virtual"><scope>dummy_api::Line</scope><name>operator=</name></member>
      <member refid="classdummy__api_1_1Line_1a173e59d1f9b51297de56ce9fab8f6e4e" prot="public" virt="non-virtual"><scope>dummy_api::Line</scope><name>operator==</name></member>
      <member refid="classdummy__api_1_1Line_1abda4b1a3e0302622728aafd5dca8d6a7" prot="public" virt="non-virtual"><scope>dummy_api::Line</scope><name>second</name></member>
      <member refid="classdummy__api_1_1Line_1a5ef35b0438af5d8f0288f79be06f2990" prot="public" virt="non-virtual"><scope>dummy_api::Line</scope><name>second</name></member>
      <member refid="classdummy__api_1_1Shape_1afa927ea1d5ef0635f209a117d7617067" prot="protected" virt="non-virtual"><scope>dummy_api::Line</scope><name>Shape</name></member>
      <member refid="classdummy__api_1_1Line_1a9318bc7992e8e58ffd205a4ee213e84b" prot="public" virt="non-virtual"><scope>dummy_api::Line</scope><name>~Line</name></member>
      <member refid="classdummy__api_1_1Shape_1afaa225741e5e3aaf6631a65e812766b6" prot="public" virt="virtual"><scope>dummy_api::Line</scope><name>~Shape</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
